install.packages("slidify")
library("tools", lib.loc="/usr/lib/R/library")
library("KernSmooth", lib.loc="/usr/lib/R/library")
## This is a markdown file
getwd
getwd ()
myfunction <- function() (
x <- rnorm(100)
mean(x)
)
myfunction <- function() (
x<-rnorm(100)
mean(x)
)
myfunction <- function() (
x <- rnorm(100)
mean(x)
)
myfunction <- function() (
x <- rnorm(100)
mean(x)
)
get wd
getwd
getwd ()
getwd ()
dir()
ls
x <- 1:20
x
x
m <- matrix(1:6, nrow = 2, ncol = 3)
m
m <- 1:10
m
dim(m) <- c(2, 5)
m
x <- 1:3
y <- 10:12
cbind(x, y)
rbind (x, y)
m
m <- rbind (x, y)
m
install.packages("swirl")
library(swirl)
q()
install_from_swirl("R Programming")
library(swirl)
swirl()
5+7
x<-5+7
x
y <- x-3
y
z <-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2+100
my_sqrt <- sqrt(z -1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my
my_div
bye()
q()
data read.table(hw_1data.csv)
data <- read.table(hw_1data.csv)
data <- read.table(hw1_data.csv)
data <- read.csv(hw1_data.csv)
data <- read.csv("hw1_data.csv")
ls
cd
initial <- read.csv("hw1_data.csv",nrows = 2)
args(lm)
library(datasets)
data(iris)
?iris
iris
summary(iris)
head(iris)
colMeans(iris)
colMeans(iris$Sepal.Length)
apply(iris ,2 ,mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
v <-apply(iris[, 1:4], 2, mean)
v
apply(iris[, 1:4], 1, mean)
colMeans(iris)
colMeans("iris")
colMeans(iris[,1:5])
colMeans(iris[,1:4])
s <- split(iris, iris$Species)
s
lapply(s, function(iris) colMeans(iris[,1]))
lapply(s, colMeans(iris[,1]))
lapply(s, mean(iris[,1]))
lapply(s, mean(iris$Sepal.Length)
lapply(s, mean(iris$Sepal.Length)
lapply(s, mean(iris$Sepal.Length))
lapply(s, function(iris) colMeans(iris[,1:4]))
lapply(s, function(iris$virginica) colMeans(iris[,1:4]))
lapply(s$virginica, function(iris) colMeans(iris[,1:4]))
lapply(s, function(iris$virginica) colMeans(iris[,1:4]))
lapply(s$virginica, colMeans(s[,1:4]))
lapply(s$virginica, function(s) colMeans(s[,1:4]))
lapply(s$virginica, function(s) colMeans(s[,1:4]))
lapply(s, function(x) colMeans(x[,1:4]))
lapply(s$virginica, function(x) colMeans(x[,1:4]))
lapply(s$virginica, function(x) colMeans(x[,1]))
lapply(s$virginica, mean(iris$Sepal.Length))
lapply(s, function(x) colMeans(x[,1:4]))
library(datasets)
data(mtcars)
?mtcars
str(mtcars)
summary(mtcars)
head(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean)
str(tapply)
tapply(mtcars$cyl, mtcars$mpg, mean, simplify = TRUE)
tapply(mtcars$mpg, mtcars$cyl, mean)
str(split)
s1 <- split(mtcars, mtcars$cyl)
s1
hpmeans4 <- lapply(s1, apply(s1&4, s1$`4`, mean))
s1$`4`
mean(s1$`4`[["hp"]])
avgh4 <- mean(s1$`4`[["hp"]])
avghp4 <- mean(s1$`4`[["hp"]])
avghp4
avghp8 <- mean(s1$`8`[["hp"]])
abs(avghp4 - avghp8)
avghp8
209.2143 - 82.63636
debug(ls)
ls
-q
exit
-q()
?browser
q()
exit
debug
exit
q()
str(mean)
summary(mean)
setwd("~/datasciencecoursera")
set.seed(1)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
set.seed(1)
rpois(5,2)
str(qpois)
?rpois
